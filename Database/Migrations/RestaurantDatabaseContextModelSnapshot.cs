// <auto-generated />
using Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(RestaurantDatabaseContext))]
    partial class RestaurantDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlergenPreparat", b =>
                {
                    b.Property<int>("AlergeniId")
                        .HasColumnType("int");

                    b.Property<int>("PreparateId")
                        .HasColumnType("int");

                    b.HasKey("AlergeniId", "PreparateId");

                    b.HasIndex("PreparateId");

                    b.ToTable("PreparatAlergen", (string)null);
                });

            modelBuilder.Entity("Database.Models.Alergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipAlergen")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Alergeni");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nume = "Gluten",
                            TipAlergen = 0
                        },
                        new
                        {
                            Id = 2,
                            Nume = "Oua",
                            TipAlergen = 1
                        },
                        new
                        {
                            Id = 3,
                            Nume = "Lactoza",
                            TipAlergen = 2
                        },
                        new
                        {
                            Id = 4,
                            Nume = "Alune",
                            TipAlergen = 3
                        });
                });

            modelBuilder.Entity("Database.Models.Comanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("StareComanda")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserEmail");

                    b.ToTable("Comenzi");
                });

            modelBuilder.Entity("Database.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Categorie")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meniuri");
                });

            modelBuilder.Entity("Database.Models.MenuPreparat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantitate")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("PreparatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("PreparatId");

                    b.ToTable("MenuPreparat");
                });

            modelBuilder.Entity("Database.Models.Preparat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantitatePortie")
                        .HasColumnType("int");

                    b.Property<int>("CantitateTotala")
                        .HasColumnType("int");

                    b.Property<int>("Categorie")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Preparate");
                });

            modelBuilder.Entity("Database.Models.PreparatCantitate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantitate")
                        .HasColumnType("int");

                    b.Property<int>("ComandaId")
                        .HasColumnType("int");

                    b.Property<int>("PreparatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComandaId");

                    b.HasIndex("PreparatId");

                    b.ToTable("PreparatCantitate");
                });

            modelBuilder.Entity("Database.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Angajat")
                        .HasColumnType("bit");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AlergenPreparat", b =>
                {
                    b.HasOne("Database.Models.Alergen", null)
                        .WithMany()
                        .HasForeignKey("AlergeniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Models.Preparat", null)
                        .WithMany()
                        .HasForeignKey("PreparateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Models.Comanda", b =>
                {
                    b.HasOne("Database.Models.User", "User")
                        .WithMany("Comenzi")
                        .HasForeignKey("UserEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Database.Models.MenuPreparat", b =>
                {
                    b.HasOne("Database.Models.Menu", null)
                        .WithMany("ListaPreparate")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Models.Preparat", "Preparat")
                        .WithMany()
                        .HasForeignKey("PreparatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Preparat");
                });

            modelBuilder.Entity("Database.Models.PreparatCantitate", b =>
                {
                    b.HasOne("Database.Models.Comanda", null)
                        .WithMany("PreparatCantitate")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Models.Preparat", "Preparat")
                        .WithMany()
                        .HasForeignKey("PreparatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Preparat");
                });

            modelBuilder.Entity("Database.Models.Comanda", b =>
                {
                    b.Navigation("PreparatCantitate");
                });

            modelBuilder.Entity("Database.Models.Menu", b =>
                {
                    b.Navigation("ListaPreparate");
                });

            modelBuilder.Entity("Database.Models.User", b =>
                {
                    b.Navigation("Comenzi");
                });
#pragma warning restore 612, 618
        }
    }
}
